// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Roles {
  MEMBER
  ADMIN
}

enum Problems {
  INSTALLATION
  DAMAGE
  DEVICE_PROBLEMS
  SPEED_INCREASE
  REPORT
}

enum Status {
  PENDING
  PROCESS
  FINISHED
}

model User {
  id          String       @id @default(cuid())
  name        String
  phoneNumber String
  address     String
  role        Roles        @default(MEMBER)
  auth        Auth?
  Membership  Membership[]
}

model Auth {
  id       String @id @default(cuid())
  userId   String @unique
  email    String @unique
  password String
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Membership {
  id               String   @id @default(cuid())
  userId           String
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  locationDistance Float
  problem          Problems @default(INSTALLATION)
  timeOfIncident   DateTime
  cost             Float
  description      String
  status           Status
  ahp              Ahp?
}

model Ahp {
  id           String     @id @default(cuid())
  membershipId String     @unique
  membership   Membership @relation(fields: [membershipId], references: [id], onDelete: Cascade)
  ci           Float
  cr           Float
  rankScore    Float
}
